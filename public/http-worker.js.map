{"version":3,"file":"http-worker.js?id=2cee0496528374c17fa5","sources":["webpack:///./resources/js/Services/Http/WorkerService.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar WorkerService = /*#__PURE__*/function () {\n  function WorkerService(Events) {\n    _classCallCheck(this, WorkerService);\n\n    this.$events = Events;\n  }\n\n  _createClass(WorkerService, [{\n    key: \"install\",\n    value: function install() {\n      if (this.isSupported) {\n        navigator.serviceWorker.register('/worker.js', {\n          scope: '.'\n        }).then(function () {\n          return navigator.serviceWorker.ready;\n        }).then(this.onInstalled.bind(this), this.onFailed.bind(this));\n      } else {\n        console.warn('ServiceWorker UnAvailable');\n      }\n\n      return this;\n    }\n    /**\n     * Registration Successful Handler.\n     * @param registration {ServiceWorkerRegistration}\n     */\n\n  }, {\n    key: \"onInstalled\",\n    value: function onInstalled(registration) {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.$events.$emit('worker:registered');\n\n        _this.dispatch({\n          test: 123\n        }).then(function (result) {\n          console.log(\"WorkerResult\", result);\n        });\n      }, 1000);\n    }\n    /**\n     * Registration Failed Handler.\n     * @param error {Error}\n     */\n\n  }, {\n    key: \"onFailed\",\n    value: function onFailed(error) {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.$events.$emit('worker:failed', error);\n      }, 1000);\n    }\n    /**\n     * Dispatch Event to Queue Worker.\n     * @param job {Object}\n     * @return {Promise}\n     * @docs https://html.spec.whatwg.org/multipage/workers.html#dom-worker-postmessage\n     */\n\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(job) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.isSupported || !_this3.isAvailable) reject();\n        var channel = new MessageChannel();\n\n        channel.port1.onmessage = function (event) {\n          if (event.data.error) {\n            reject(event.data.error);\n          } else {\n            resolve(event.data);\n          }\n        };\n\n        navigator.serviceWorker.controller.postMessage(job, [channel.port2]);\n      });\n    }\n  }, {\n    key: \"isSupported\",\n    get: function get() {\n      return 'navigator' in window && 'serviceWorker' in navigator;\n    }\n  }, {\n    key: \"isAvailable\",\n    get: function get() {\n      return navigator.serviceWorker.controller;\n    }\n  }]);\n\n  return WorkerService;\n}();\n\nexport { WorkerService as default };"],"mappingssourceRoot":""}